// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// poisson_lpmf
double poisson_lpmf(const double x, const double lambda);
RcppExport SEXP scanstatistics_poisson_lpmf(SEXP xSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type x(xSEXP);
    Rcpp::traits::input_parameter< const double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(poisson_lpmf(x, lambda));
    return rcpp_result_gen;
END_RCPP
}
// zip_statistic_logfactor
NumericVector zip_statistic_logfactor(NumericVector p, NumericVector d, NumericVector mu, NumericVector y, double tol);
RcppExport SEXP scanstatistics_zip_statistic_logfactor(SEXP pSEXP, SEXP dSEXP, SEXP muSEXP, SEXP ySEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(zip_statistic_logfactor(p, d, mu, y, tol));
    return rcpp_result_gen;
END_RCPP
}
// estimate_zip_relrisk
double estimate_zip_relrisk(NumericVector d, NumericVector mu, NumericVector y);
RcppExport SEXP scanstatistics_estimate_zip_relrisk(SEXP dSEXP, SEXP muSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(estimate_zip_relrisk(d, mu, y));
    return rcpp_result_gen;
END_RCPP
}
// estimate_d
NumericVector estimate_d(NumericVector p, NumericVector mu, NumericVector y);
RcppExport SEXP scanstatistics_estimate_d(SEXP pSEXP, SEXP muSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(estimate_d(p, mu, y));
    return rcpp_result_gen;
END_RCPP
}
// zip_em_estimates
List zip_em_estimates(NumericVector p, NumericVector mu, NumericVector y, double tol);
RcppExport SEXP scanstatistics_zip_em_estimates(SEXP pSEXP, SEXP muSEXP, SEXP ySEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(zip_em_estimates(p, mu, y, tol));
    return rcpp_result_gen;
END_RCPP
}
// zip_statistic_term
NumericVector zip_statistic_term(double q, NumericVector p, NumericVector dstar, NumericVector ddagger, NumericVector mu, NumericVector y);
RcppExport SEXP scanstatistics_zip_statistic_term(SEXP qSEXP, SEXP pSEXP, SEXP dstarSEXP, SEXP ddaggerSEXP, SEXP muSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type q(qSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dstar(dstarSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ddagger(ddaggerSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(zip_statistic_term(q, p, dstar, ddagger, mu, y));
    return rcpp_result_gen;
END_RCPP
}
// window_zip_statistic
double window_zip_statistic(NumericVector p, NumericVector mu, NumericVector y, double tol);
RcppExport SEXP scanstatistics_window_zip_statistic(SEXP pSEXP, SEXP muSEXP, SEXP ySEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(window_zip_statistic(p, mu, y, tol));
    return rcpp_result_gen;
END_RCPP
}
